{"version":3,"sources":["Card.js","PlayerRow.js","MainPage.js","index.js"],"names":["Card","backgroundColor","item","split","colour","cardFeature","style","display","width","height","borderColor","borderWidth","borderRadius","marginRight","textAlign","color","PlayerRow","playerName","prevCards","setSelectedPerson","selectedPerson","marginTop","marginBottom","onClick","length","map","card","console","log","MainPage","cookies","Cookies","defaultGameData","Teta","Peter","Isaac","Jasmine","Mina","useState","gameData","setGameData","setCard","useEffect","get","set","JSON","stringify","TextField","variant","label","onChange","event","target","value","Button","updatedGameData","shift","push","rows","player","position","right","top","ReactDOM","render","document","getElementById"],"mappings":"2KA4CeA,EA1CF,SAAC,GAAc,IAEtBC,EAFUC,EAAW,EAAXA,KAAW,EACKA,EAAKC,MAAM,IADhB,mBAClBC,EADkB,KACVC,EADU,KAIzB,OAAQD,GACN,IAAK,IACHH,EAAkB,OAClB,MACF,IAAK,IACHA,EAAkB,MAClB,MACF,IAAK,IACHA,EAAkB,SAClB,MACF,IAAK,IACHA,EAAkB,QAClB,MACF,QACEA,EAAkB,SAItB,OACE,qBACEK,MAAO,CACLC,QAAS,eACTC,MAAO,QACPC,OAAQ,QACRR,kBACAS,YAAa,QACbC,YAAa,OACbC,aAAc,OACdC,YAAa,OATjB,SAYE,oBAAIP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,SAAzC,SACuB,WAApBd,EAA+BC,EAAOG,OCThCW,EA1BG,SAAC,GAKZ,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,eAEA,OACE,sBAAKd,MAAO,CAAEe,UAAW,OAAQC,aAAc,QAA/C,UACE,8BACE,oBACEhB,MAAOW,IAAeG,EAAiB,CAAEL,MAAO,OAAU,GAC1DQ,QAAS,kBAAMJ,EAAkBF,IAFnC,SAIGA,MAGiB,IAArBC,EAAUM,OACPN,EAAUO,KAAI,SAACC,GAEb,OADAC,QAAQC,IAAI,OAAQF,GACb,cAAC,EAAD,CAAMxB,KAAMwB,OAErB,S,wBC+DKG,EAlFE,WACf,IAAMC,EAAU,IAAIC,IAEdC,EAAkB,CACtBC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,KAAM,IARa,EAWWC,mBAASN,GAXpB,mBAWdO,EAXc,KAWJC,EAXI,OAYGF,qBAZH,mBAYdZ,EAZc,KAYRe,EAZQ,OAauBH,qBAbvB,mBAadlB,EAbc,KAaED,EAbF,KA8CrB,OAdAuB,qBAAU,WACuB,MAA3BZ,EAAQa,IAAI,YACdb,EAAQc,IAAI,WAAYC,KAAKC,UAAUP,IAEvCC,EAAYV,EAAQa,IAAI,eAEzB,IAEHD,qBAAU,WACRZ,EAAQc,IAAI,WAAYC,KAAKC,UAAUP,MACtC,CAACA,IAEJG,qBAAU,kBAAMf,QAAQC,IAAI,aAAcW,KAAW,CAACA,IAGpD,gCACE,cAACQ,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,OACNC,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAMC,OAAOC,UAE5C,cAACC,EAAA,EAAD,CAAQ/B,QAtCZ,WACE,GAAY,MAARG,GAAkC,MAAlBN,EAAwB,CAC1C,IAAImC,EAAkBhB,EAClBgB,EAAgBnC,GAAgBI,QAAU,GAC5C+B,EAAgBnC,GAAgBoC,QAEhCD,EAAgBnC,GAAgBqC,KAAK/B,GAEvCc,EAAY,eAAKe,MA8BjB,sBAEE,WACA,IAAIG,EAAO,GAEX,IAAK,IAAIC,KAAUpB,EACjBmB,EAAKD,KACH,cAAC,EAAD,CACExC,WAAY0C,EACZzC,UAAWqB,EAASoB,GACpBxC,kBAAmBA,EACnBC,eAAgBA,KAKtB,OAAOsC,EAdP,GAiBF,cAACJ,EAAA,EAAD,CACEhD,MAAO,CAAEsD,SAAU,WAAYC,MAAO,OAAQC,IAAK,QACnDvC,QA/CN,WACEiB,EAAYR,GACZF,EAAQc,IAAI,WAAYC,KAAKC,UAAUd,KA2CrC,uBCzEN+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.49c8cff4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ item }) => {\n  const [colour, cardFeature] = item.split(\"\");\n  let backgroundColor;\n\n  switch (colour) {\n    case \"b\":\n      backgroundColor = \"blue\";\n      break;\n    case \"r\":\n      backgroundColor = \"red\";\n      break;\n    case \"y\":\n      backgroundColor = \"yellow\";\n      break;\n    case \"g\":\n      backgroundColor = \"green\";\n      break;\n    default:\n      backgroundColor = \"purple\";\n      break;\n  }\n\n  return (\n    <div\n      style={{\n        display: \"inline-block\",\n        width: \"7.5vw\",\n        height: \"7.5vw\",\n        backgroundColor,\n        borderColor: \"black\",\n        borderWidth: \"10px\",\n        borderRadius: \"10px\",\n        marginRight: \"5px\",\n      }}\n    >\n      <h2 style={{ textAlign: \"center\", color: \"black\" }}>\n        {backgroundColor === \"purple\" ? item : cardFeature}\n      </h2>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst PlayerRow = ({\n  playerName,\n  prevCards,\n  setSelectedPerson,\n  selectedPerson,\n}) => {\n  return (\n    <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n      <div>\n        <h1\n          style={playerName === selectedPerson ? { color: \"red\" } : {}}\n          onClick={() => setSelectedPerson(playerName)}\n        >\n          {playerName}\n        </h1>\n      </div>\n      {prevCards.length !== 0\n        ? prevCards.map((card) => {\n            console.log(\"card\", card);\n            return <Card item={card} />;\n          })\n        : null}\n    </div>\n  );\n};\n\nexport default PlayerRow;\n","import React, { useState, useEffect } from \"react\";\nimport PlayerRow from \"./PlayerRow\";\nimport Cookies from \"universal-cookie\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst MainPage = () => {\n  const cookies = new Cookies();\n\n  const defaultGameData = {\n    Teta: [],\n    Peter: [],\n    Isaac: [],\n    Jasmine: [],\n    Mina: [],\n  };\n\n  const [gameData, setGameData] = useState(defaultGameData);\n  const [card, setCard] = useState();\n  const [selectedPerson, setSelectedPerson] = useState();\n\n  function addCard() {\n    if (card != null && selectedPerson != null) {\n      let updatedGameData = gameData;\n      if (updatedGameData[selectedPerson].length >= 10) {\n        updatedGameData[selectedPerson].shift();\n      } else {\n        updatedGameData[selectedPerson].push(card);\n      }\n      setGameData({ ...updatedGameData });\n    }\n  }\n\n  function resetGameData() {\n    setGameData(defaultGameData);\n    cookies.set(\"uno-game\", JSON.stringify(defaultGameData));\n  }\n\n  useEffect(() => {\n    if (cookies.get(\"uno-game\") == null) {\n      cookies.set(\"uno-game\", JSON.stringify(gameData));\n    } else {\n      setGameData(cookies.get(\"uno-game\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    cookies.set(\"uno-game\", JSON.stringify(gameData));\n  }, [gameData]);\n\n  useEffect(() => console.log(\"Uno game 2\", gameData), [gameData]);\n\n  return (\n    <div>\n      <TextField\n        variant=\"outlined\"\n        label=\"Card\"\n        onChange={(event) => setCard(event.target.value)}\n      />\n      <Button onClick={addCard}>Add Card</Button>\n\n      {(() => {\n        let rows = [];\n\n        for (let player in gameData) {\n          rows.push(\n            <PlayerRow\n              playerName={player}\n              prevCards={gameData[player]}\n              setSelectedPerson={setSelectedPerson}\n              selectedPerson={selectedPerson}\n            />\n          );\n        }\n\n        return rows;\n      })()}\n\n      <Button\n        style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\n        onClick={resetGameData}\n      >\n        Reset\n      </Button>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainPage from './MainPage';\n\nReactDOM.render(\n  <MainPage />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}